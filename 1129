-- 부서(부서번호, 부서명, 위치)
-- 사원(사번, 사원명, 직책, 관리자, 급여, 부서번호)

-- department(deptno, deptname, floor)                    
-- employee(empno, empname, title, manager, salary, dno)

drop table if exists employee;
drop table if exists department;

CREATE TABLE department (
     deptno              int          NOT NULL ,
     deptname          varchar(10) ,
     floor                 int ,
     PRIMARY KEY(deptno)
);

INSERT INTO department VALUES(1, '영업', 8);
INSERT INTO department VALUES(2, '기획', 10);
INSERT INTO department VALUES(3, '개발', 9);
INSERT INTO department VALUES(4, '총무', 7);

CREATE TABLE employee (
    empno	         int	              NOT NULL,
    empname     varchar(10)     UNIQUE,
    title	         varchar(10)     DEFAULT '사원',
    manager       int  ,
    salary            int	 ,
    dno              int	 ,
    PRIMARY KEY(empno),
    FOREIGN KEY(dno) REFERENCES department(deptno)
);

INSERT INTO employee VALUES(2106, '김창섭','대리',1003, 2500000, 2);
INSERT INTO employee VALUES(3426, '박영권','과장',4377, 3000000, 1);
INSERT INTO employee VALUES(3011, '이수민','부장',4377, 4000000, 3);
INSERT INTO employee VALUES(1003, '조민희','과장',4377, 3000000, 2);
INSERT INTO employee VALUES(3427, '최종철','사원',3011, 1500000, 3);
INSERT INTO employee VALUES(1365, '김상원','사원',3426, 1500000, 1);
INSERT INTO employee(empno, empname, title, salary, dno) VALUES(4377, '이성래','이사', 5000000, 2);

select * from department;
select * from employee;


-- 1) 부서의 모든 필드를 검색하라
SELECT *
FROM department;

-- 2) 부서의 부서번호와 부서이름을 검색하라 (deptno는 부서번호, deptname은 부서이름 으로 검색)
SELECT deptno, deptname
FROM department;

-- 3) 사원의 직급을 검색하라
SELECT title
FROM employee;

* -- 4) 사원의 직급을 한번씩만 검색하라 (중복제거) (DISTINCT)
SELECT DISTINCT title 
FROM employee;

-- 5) 2번 부서에 근무하는 사원들에 관한 모든 정보를 검색하라
SELECT *
FROM employee
WHERE dno = 2;

* -- 6) 이씨 성을 가진 사원들의 이름, 직급, 부서번호를 검색하라
SELECT empname, title, dno
FROM employee
WHERE empname LIKE '이%';

-- 7) 직급이 과장이면서 1번 부서에서 근무하는 사원들의 이름과 급여를 검색하라
SELECT empname, salary
FROM employee
WHERE title = '과장' AND dno = 1;

* -- 8) 직급이 과장이면서 1번 부서에 속하지 않은 사원들의 이름과 급여를 검색하라
SELECT empname, salary
FROM employee
WHERE title = '과장' AND dno != 1;

-- 9) 급여가 3000000원 이상이고, 4500000원 이하인 사원의 이름, 직급, 급여를 검색하라
-- 9-1) BEWTEEN … AND 사용
SELECT empname, title, salary
FROM employee
WHERE salary BETWEEN 3000000 AND 4500000;

-- 9-2) 부등호 사용
SELECT empname, title, salary
FROM employee
WHERE salary >= 3000000 AND salary <= 4500000;

* -- 10) 1번 부서나 3번 부서에 소속된 사원들에 관한 모든 정보를 검색하라 (IN 사용)
SELECT *
FROM employee
WHERE DNO IN (1,3);

-- 11) 직급이 과장인 사원들에 대하여 이름, 현재급여, 급여가 10% 인상됐을 때의 값을 검색하라
SELECT empname,
       salary AS "현재급여",
       salary * 1.1 AS "10% 인상 후 급여"
FROM employee
WHERE title = '과장';

* -- 12) 2번 부서에 근무하는 사원들의 급여, 직급, 이름을 검색하여 급여의 오름차순으로 정렬하라
SELECT salary, title, empname
FROM employee
WHERE dno = 2
ORDER BY salary ASC;

-- 13) 사원들의 평균 급여와 최대급여를 검색하라
SELECT AVG(salary) AS "평균 급여",
       MAX(salary) AS "최대 급여"
FROM employee;

* -- 14) 사원들이 속한 부서번호별로 그룹화하고 부서번호, 평균급여, 최대급여를 검색하라
SELECT  dno, ROUND(AVG(salary)), MAX(salary)
FROM    employee
GROUP BY dno;

-- 15) 사원들이 속한 부서번호별로 그룹화하고, 평균급여가 2500000원 이상인 
-- 부서에 대해서 부서번호, 평균급여, 최대급여를 검색하라
SELECT dno AS "부서번호",
       AVG(salary) AS "평균급여",
       MAX(salary) AS "최대급여"
FROM employee
GROUP BY dno
HAVING AVG(salary) >= 2500000;

-- 16-1) 김창섭이 속한 부서번호와 부서의 모든 부서번호를 합집합으로 검색하라 (UNION)
SELECT   dno
FROM     employee
WHERE    empname = '김창섭'
UNION
SELECT     deptno
FROM      department ;

-- 16-2) 김창섭이 속한 부서번호와 부서의 모든 부서번호를 합집합으로 검색하라 (UNION ALL)
SELECT   dno
FROM     employee
WHERE    empname = '김창섭'
UNION ALL
SELECT     deptno
FROM      department ;

* -- 17) 사원의 이름과 이 사원이 속한 부서이름을 검색하라 (조인)
SELECT empname , deptname
FROM employee,department
WHERE dno = deptno;

-- 18) 사원에 대해서 사원이름과 직속상사의 이름을 검색하라(Self-Join)
SELECT e.empname AS "사원명",
       m.empname AS "직속상사"
FROM employee e
JOIN employee m ON e.manager = m.empno;

-- 19) 사원에 대해서 부서이름, 사원이름, 직급, 급여를 검색하라.
-- 부서이름에 대해서 오름차순, 부서이름이 같을 경우에는 salary에 대해서 내림차순으로 정렬하라
SELECT d.deptname AS "부서이름",
       e.empname AS "사원이름",
       e.title AS "직급",
       e.salary AS "급여"
FROM employee e
JOIN department d ON e.dno = d.deptno
ORDER BY d.deptname ASC, e.salary DESC;
